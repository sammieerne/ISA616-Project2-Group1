fsb_data$survey_state[fsb_data$survey_state  == 'Illinois / USA'] <- 'IL'
fsb_data$survey_state[fsb_data$survey_state  == 'Illinois, USA'] <- 'IL'
fsb_data$survey_state[fsb_data$survey_state == 'Illinois/ US'] <- 'IL'
fsb_data$survey_state[fsb_data$survey_state  == 'Illinois/USA'] <- 'IL'
fsb_data$survey_state[fsb_data$survey_state  == 'Kentucky'] <- 'KY'
fsb_data$survey_state[fsb_data$survey_state == 'Kansas'] <- 'KS'
fsb_data$survey_state[fsb_data$survey_state  == 'MA / USA'] <- 'MA'
fsb_data$survey_state[fsb_data$survey_state  == 'MI / U.S.'] <- 'MI'
fsb_data$survey_state[fsb_data$survey_state  == 'Maine'] <- 'ME'
fsb_data$survey_state[fsb_data$survey_state  == 'Massachusetts, USA'] <- 'MA'
fsb_data$survey_state[fsb_data$survey_state  == 'Michigan'] <- 'MI'
fsb_data$survey_state[fsb_data$survey_state  == 'Michigan, Detroit'] <- 'MI'
fsb_data$survey_state[fsb_data$survey_state  == 'Michigan'] <- 'MI'
fsb_data$survey_state[fsb_data$survey_state  == 'Montana'] <- 'MT'
fsb_data$survey_state[fsb_data$survey_state  == 'Minnesota'] <- 'MN'
fsb_data$survey_state[fsb_data$survey_state  == 'N/A'] <- 'NA'
fsb_data$survey_state[fsb_data$survey_state  == 'Nebraska'] <- 'NE'
fsb_data$survey_state[fsb_data$survey_state  == 'New York'] <- 'NY'
fsb_data$survey_state[fsb_data$survey_state  == 'New York, USA'] <- 'NY'
fsb_data$survey_state[fsb_data$survey_state  == 'New york'] <- 'NY'
fsb_data$survey_state[fsb_data$survey_state  == 'North Carolina'] <- 'NC'
fsb_data$survey_state[fsb_data$survey_state  == 'OH, USA'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state == 'OH/USA'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state  == 'OH/Us'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state  == 'OHIO'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state == 'Oh'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state  == 'Ohio'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state  == 'Ohio / The United States'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state  == 'Ohio / USA'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state  == 'Ohio / United States'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state == 'Ohio, USA'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state == 'Ohio/ United States'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state  == 'Ohio/USA'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state == 'Ohio/United States'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state == 'Oregon'] <- 'OR'
fsb_data$survey_state[fsb_data$survey_state == 'Pennsylvania'] <- 'PA'
fsb_data$survey_state[fsb_data$survey_state == 'Rhode Island'] <- 'RI'
fsb_data$survey_state[fsb_data$survey_state == 'TBA / USA'] <- 'NA'
fsb_data$survey_state[fsb_data$survey_state == 'TBD'] <- 'NA'
fsb_data$survey_state[fsb_data$survey_state  == 'TX/USA'] <- 'TX'
fsb_data$survey_state[fsb_data$survey_state == 'Tennessee'] <- 'TN'
fsb_data$survey_state[fsb_data$survey_state == 'Texas'] <- 'TX'
fsb_data$survey_state[fsb_data$survey_state  == 'Texas/ USA'] <- 'TX'
fsb_data$survey_state[fsb_data$survey_state  == 'US'] <- 'NA'
fsb_data$survey_state[fsb_data$survey_state == 'USA'] <- 'NA'
fsb_data$survey_state[fsb_data$survey_state  == 'United States'] <- 'NA'
fsb_data$survey_state[fsb_data$survey_state  == 'Virgina'] <- 'VA'
fsb_data$survey_state[fsb_data$survey_state  == 'Virginia (VA)'] <- 'VA'
fsb_data$survey_state[fsb_data$survey_state  == 'Virginia/ USA'] <- 'VA'
fsb_data$survey_state[fsb_data$survey_state  == 'Washington'] <- 'WA'
fsb_data$survey_state[fsb_data$survey_state  == 'Washington D.C/United States'] <- 'DC'
fsb_data$survey_state[fsb_data$survey_state  == 'Wisconsin'] <- 'WI'
fsb_data$survey_state[fsb_data$survey_state  == 'Wisconsin / USA'] <- 'WI'
fsb_data$survey_state[fsb_data$survey_state  == 'iL'] <- 'IL'
fsb_data$survey_state[fsb_data$survey_state  == 'illinois'] <- 'IL'
fsb_data$survey_state[fsb_data$survey_state  == 'na'] <- 'NA'
fsb_data$survey_state[fsb_data$survey_state  == 'new york'] <- 'NY'
fsb_data$survey_state[fsb_data$survey_state == 'oh'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state == 'ohio'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state == 'California'] <- 'CA'
fsb_data$survey_state[fsb_data$survey_state == 'Delaware'] <- 'DE'
fsb_data$survey_state[fsb_data$survey_state == 'Indiana'] <- 'IN'
fsb_data$survey_state[fsb_data$survey_state == 'Virginia'] <- 'VA'
fsb_data$survey_state[fsb_data$survey_state %in% c("NA")] <- NA
value_counts2 <- fsb_data %>%
group_by(survey_state) %>%
summarise(Count = n())
value_counts2
# check values for survey_state
value_counts <- fsb_data %>%
group_by(survey_state) %>%
summarise(Count = n())
value_counts
# update values for survey_state to compare regional values
fsb_data$survey_state[fsb_data$survey_state == 'Colorado'] <- 'CO'
fsb_data$survey_state[fsb_data$survey_state == 'Colorado/ United States'] <- 'CO'
fsb_data$survey_state[fsb_data$survey_state == 'Connecticut'] <- 'CT'
fsb_data$survey_state[fsb_data$survey_state  == 'D.C.'] <- 'DC'
fsb_data$survey_state[fsb_data$survey_state  == 'Delware'] <- 'DE'
fsb_data$survey_state[fsb_data$survey_state == 'District of Columbia'] <- 'DC'
fsb_data$survey_state[fsb_data$survey_state  == 'Florida'] <- 'FL'
fsb_data$survey_state[fsb_data$survey_state  == 'Georgia'] <- 'GA'
fsb_data$survey_state[fsb_data$survey_state  == 'Georgia, USA'] <- 'GA'
fsb_data$survey_state[fsb_data$survey_state == 'IL, US'] <- 'IL'
fsb_data$survey_state[fsb_data$survey_state == 'IL, USA'] <- 'IL'
fsb_data$survey_state[fsb_data$survey_state  == 'IL, United States'] <- 'IL'
fsb_data$survey_state[fsb_data$survey_state  == 'IL/ USA'] <- 'IL'
fsb_data$survey_state[fsb_data$survey_state  == 'IL/USA'] <- 'IL'
fsb_data$survey_state[fsb_data$survey_state  == 'IN / USA'] <- 'IN'
fsb_data$survey_state[fsb_data$survey_state  == 'Il'] <- 'IL'
fsb_data$survey_state[fsb_data$survey_state  == 'Illinois'] <- 'IL'
fsb_data$survey_state[fsb_data$survey_state  == 'Illinois / USA'] <- 'IL'
fsb_data$survey_state[fsb_data$survey_state  == 'Illinois, USA'] <- 'IL'
fsb_data$survey_state[fsb_data$survey_state == 'Illinois/ US'] <- 'IL'
fsb_data$survey_state[fsb_data$survey_state  == 'Illinois/USA'] <- 'IL'
fsb_data$survey_state[fsb_data$survey_state  == 'Kentucky'] <- 'KY'
fsb_data$survey_state[fsb_data$survey_state == 'Kansas'] <- 'KS'
fsb_data$survey_state[fsb_data$survey_state  == 'MA / USA'] <- 'MA'
fsb_data$survey_state[fsb_data$survey_state  == 'MI / U.S.'] <- 'MI'
fsb_data$survey_state[fsb_data$survey_state  == 'Maine'] <- 'ME'
fsb_data$survey_state[fsb_data$survey_state  == 'Massachusetts, USA'] <- 'MA'
fsb_data$survey_state[fsb_data$survey_state  == 'Michigan'] <- 'MI'
fsb_data$survey_state[fsb_data$survey_state  == 'Michigan, Detroit'] <- 'MI'
fsb_data$survey_state[fsb_data$survey_state  == 'Michigan'] <- 'MI'
fsb_data$survey_state[fsb_data$survey_state  == 'Montana'] <- 'MT'
fsb_data$survey_state[fsb_data$survey_state  == 'Minnesota'] <- 'MN'
fsb_data$survey_state[fsb_data$survey_state  == 'N/A'] <- 'NA'
fsb_data$survey_state[fsb_data$survey_state  == 'Nebraska'] <- 'NE'
fsb_data$survey_state[fsb_data$survey_state  == 'New York'] <- 'NY'
fsb_data$survey_state[fsb_data$survey_state  == 'New York, USA'] <- 'NY'
fsb_data$survey_state[fsb_data$survey_state  == 'New york'] <- 'NY'
fsb_data$survey_state[fsb_data$survey_state  == 'North Carolina'] <- 'NC'
fsb_data$survey_state[fsb_data$survey_state  == 'OH, USA'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state == 'OH/USA'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state  == 'OH/Us'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state  == 'OHIO'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state == 'Oh'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state  == 'Ohio'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state  == 'Ohio / The United States'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state  == 'Ohio / USA'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state  == 'Ohio / United States'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state == 'Ohio, USA'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state == 'Ohio/ United States'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state  == 'Ohio/USA'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state == 'Ohio/United States'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state == 'Oregon'] <- 'OR'
fsb_data$survey_state[fsb_data$survey_state == 'Pennsylvania'] <- 'PA'
fsb_data$survey_state[fsb_data$survey_state == 'Rhode Island'] <- 'RI'
fsb_data$survey_state[fsb_data$survey_state == 'TBA / USA'] <- 'NA'
fsb_data$survey_state[fsb_data$survey_state == 'TBD'] <- 'NA'
fsb_data$survey_state[fsb_data$survey_state  == 'TX/USA'] <- 'TX'
fsb_data$survey_state[fsb_data$survey_state == 'Tennessee'] <- 'TN'
fsb_data$survey_state[fsb_data$survey_state == 'Texas'] <- 'TX'
fsb_data$survey_state[fsb_data$survey_state  == 'Texas/ USA'] <- 'TX'
fsb_data$survey_state[fsb_data$survey_state  == 'US'] <- 'NA'
fsb_data$survey_state[fsb_data$survey_state == 'USA'] <- 'NA'
fsb_data$survey_state[fsb_data$survey_state  == 'United States'] <- 'NA'
fsb_data$survey_state[fsb_data$survey_state  == 'Virgina'] <- 'VA'
fsb_data$survey_state[fsb_data$survey_state  == 'Virginia (VA)'] <- 'VA'
fsb_data$survey_state[fsb_data$survey_state  == 'Virginia/ USA'] <- 'VA'
fsb_data$survey_state[fsb_data$survey_state  == 'Washington'] <- 'WA'
fsb_data$survey_state[fsb_data$survey_state  == 'Washington D.C/United States'] <- 'DC'
fsb_data$survey_state[fsb_data$survey_state  == 'Wisconsin'] <- 'WI'
fsb_data$survey_state[fsb_data$survey_state  == 'Wisconsin / USA'] <- 'WI'
fsb_data$survey_state[fsb_data$survey_state  == 'iL'] <- 'IL'
fsb_data$survey_state[fsb_data$survey_state  == 'illinois'] <- 'IL'
fsb_data$survey_state[fsb_data$survey_state  == 'na'] <- 'NA'
fsb_data$survey_state[fsb_data$survey_state  == 'new york'] <- 'NY'
fsb_data$survey_state[fsb_data$survey_state == 'oh'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state == 'ohio'] <- 'OH'
fsb_data$survey_state[fsb_data$survey_state == 'California'] <- 'CA'
fsb_data$survey_state[fsb_data$survey_state == 'Delaware'] <- 'DE'
fsb_data$survey_state[fsb_data$survey_state == 'Indiana'] <- 'IN'
fsb_data$survey_state[fsb_data$survey_state == 'Virginia'] <- 'VA'
fsb_data$survey_state[fsb_data$survey_state %in% c("NA")] <- NA
value_counts2 <- fsb_data %>%
group_by(survey_state) %>%
summarise(Count = n())
value_counts2
# check values for survey_salary
value_counts <- fsb_data %>%
group_by(survey_salary) %>%
summarise(Count = n())
value_counts
missing_values <- colSums(is.na(fsb_data))
missing_values
# check values for survey_salary
value_counts <- fsb_data %>%
group_by(survey_salary) %>%
summarise(Count = n())
value_counts
# check values for survey_deptfunc
value_counts <- fsb_data %>%
group_by(survey_deptfunc) %>%
summarise(Count = n())
value_counts
# only get first department entered in the field
for (i in 1:nrow(fsb_data)) {
split_result <- unlist(strsplit(fsb_data$survey_deptfunc[i], "/"))
fsb_data$top_dept_func[i] <- split_result[1]
}
for (i in 1:nrow(fsb_data)) {
split_result <- unlist(strsplit(fsb_data$top_dept_func[i], " "))
fsb_data$top_dept_func2[i] <- split_result[1]
}
fsb_data$top_dept_func2[fsb_data$top_dept_func2 == 'Accounting\r\n'] <- 'Accounting'
fsb_data$top_dept_func2[fsb_data$top_dept_func2 == 'Accounting,'] <- 'Accounting'
fsb_data$top_dept_func2[fsb_data$top_dept_func2 == 'Actuary\r\n'] <- 'Actuary'
fsb_data$top_dept_func2[fsb_data$top_dept_func2 == 'Analytics\r\n'] <- 'Analytics'
fsb_data$top_dept_func2[fsb_data$top_dept_func2 == 'Consulting\r\n'] <- 'Consulting'
fsb_data$top_dept_func2[fsb_data$top_dept_func2 == 'Analytics\r\n'] <- 'Analytics'
fsb_data$top_dept_func2[fsb_data$top_dept_func2 == 'Finance\r\n'] <- 'Finance'
fsb_data$top_dept_func2[fsb_data$top_dept_func2 == 'General'] <- 'General Management'
fsb_data$top_dept_func2[fsb_data$top_dept_func2 == 'Human'] <- 'HR'
fsb_data$top_dept_func2[fsb_data$top_dept_func2 == 'Information'] <- 'IT'
fsb_data$top_dept_func2[fsb_data$top_dept_func2 == 'Mareting'] <- 'Marketing'
fsb_data$top_dept_func2[fsb_data$top_dept_func2 == 'Logisitics'] <- 'Logistics'
fsb_data$top_dept_func2[fsb_data$top_dept_func2 == 'Merchant'] <- 'Merchant Services'
fsb_data$top_dept_func2[fsb_data$top_dept_func2 == 'Logisitics'] <- 'Logistics'
fsb_data$top_dept_func2[fsb_data$top_dept_func2 == 'Other:'] <- 'Other'
fsb_data$top_dept_func2[fsb_data$top_dept_func2 %in% c("Claudine", "E&J", "Green", "Hemprise", "PopSquare", "Tip-off")] <- NA
value_counts1 <- fsb_data %>%
group_by(top_dept_func2) %>%
summarise(Count = n())
value_counts1
# change name of new column to survey_deptfunc column
fsb_data <- fsb_data[, !(colnames(fsb_data) %in% "top_dept_func")]
fsb_data <- fsb_data[, !(colnames(fsb_data) %in% "survey_deptfunc")]
names(fsb_data)[names(fsb_data) == "top_dept_func2"] <- "survey_deptfunc"
#missing_values <- colSums(is.na(fsb_data))
#missing_values
#glimpse(fsb_data)
# Imputing relevant variables for our analysis
fsb_data$survey_city <- ifelse(is.na(fsb_data$survey_city), "Unknown", fsb_data$survey_city)
fsb_data$survey_state <- ifelse(is.na(fsb_data$survey_state), "Unknown", fsb_data$survey_state)
fsb_data$survey_company <- ifelse(is.na(fsb_data$survey_company), "Unknown", fsb_data$survey_company)
fsb_data$survey_deptfunc <- ifelse(is.na(fsb_data$survey_deptfunc), "Unknown", fsb_data$survey_deptfunc)
'''
# getting mean salary for each major
result <- fsb_data %>%
group_by(major1) %>%
summarise(Mean_Salary = mean(survey_salary, na.rm = TRUE))
for (i in 1:nrow(fsb_data)) {
if (is.na(fsb_data$survey_salary[i])) {
major <- fsb_data$major1[i]
mean_salary <- result$Mean_Salary[result$major1 == major]
fsb_data$survey_salary[i] <- mean_salary
}
}
'''
#missing_values <- colSums(is.na(fsb_data))
#missing_values
#glimpse(fsb_data)
# Imputing relevant variables for our analysis
fsb_data$survey_city <- ifelse(is.na(fsb_data$survey_city), "Unknown", fsb_data$survey_city)
fsb_data$survey_state <- ifelse(is.na(fsb_data$survey_state), "Unknown", fsb_data$survey_state)
fsb_data$survey_company <- ifelse(is.na(fsb_data$survey_company), "Unknown", fsb_data$survey_company)
fsb_data$survey_deptfunc <- ifelse(is.na(fsb_data$survey_deptfunc), "Unknown", fsb_data$survey_deptfunc)
missing_values <- colSums(is.na(fsb_data))
missing_values
#missing_values <- colSums(is.na(fsb_data))
#missing_values
#glimpse(fsb_data)
# Imputing relevant variables for our analysis
fsb_data$survey_city <- ifelse(is.na(fsb_data$survey_city), "Unknown", fsb_data$survey_city)
fsb_data$survey_state <- ifelse(is.na(fsb_data$survey_state), "Unknown", fsb_data$survey_state)
fsb_data$survey_company <- ifelse(is.na(fsb_data$survey_company), "Unknown", fsb_data$survey_company)
fsb_data$survey_deptfunc <- ifelse(is.na(fsb_data$survey_deptfunc), "Unknown", fsb_data$survey_deptfunc)
# getting mean salary for each major
result <- fsb_data %>%
group_by(major1) %>%
summarise(Mean_Salary = mean(survey_salary, na.rm = TRUE))
for (i in 1:nrow(fsb_data)) {
if (is.na(fsb_data$survey_salary[i])) {
major <- fsb_data$major1[i]
mean_salary <- result$Mean_Salary[result$major1 == major]
fsb_data$survey_salary[i] <- mean_salary
}
}
missing_values <- colSums(is.na(fsb_data))
missing_values
fsb_data[fsb_data$survey_salary== 'NaN']
fsb_data$survey_salary[fsb_data$survey_salary== 'NaN']
fsb_data$major1[fsb_data$survey_salary== 'NaN']
#missing_values <- colSums(is.na(fsb_data))
#missing_values
#glimpse(fsb_data)
# Imputing relevant variables for our analysis
fsb_data$survey_city <- ifelse(is.na(fsb_data$survey_city), "Unknown", fsb_data$survey_city)
fsb_data$survey_state <- ifelse(is.na(fsb_data$survey_state), "Unknown", fsb_data$survey_state)
fsb_data$survey_company <- ifelse(is.na(fsb_data$survey_company), "Unknown", fsb_data$survey_company)
fsb_data$survey_deptfunc <- ifelse(is.na(fsb_data$survey_deptfunc), "Unknown", fsb_data$survey_deptfunc)
# getting mean salary for each major
result <- fsb_data %>%
group_by(major1) %>%
summarise(Mean_Salary = mean(survey_salary, na.rm = TRUE))
for (i in 1:nrow(fsb_data)) {
if (is.na(fsb_data$survey_salary[i])) {
major <- fsb_data$major1[i]
mean_salary <- result$Mean_Salary[result$major1 == major]
fsb_data$survey_salary[i] <- mean_salary
}
}
fsb_data$survey_salary[fsb_data$survey_salary == 'NaN'] <- mean_salary
missing_values <- colSums(is.na(fsb_data))
missing_values
fsb_data$survey_salary[fsb_data$survey_salary == NA]
fsb_data$survey_salary
#missing_values <- colSums(is.na(fsb_data))
#missing_values
#glimpse(fsb_data)
# Imputing relevant variables for our analysis
fsb_data$survey_city <- ifelse(is.na(fsb_data$survey_city), "Unknown", fsb_data$survey_city)
fsb_data$survey_state <- ifelse(is.na(fsb_data$survey_state), "Unknown", fsb_data$survey_state)
fsb_data$survey_company <- ifelse(is.na(fsb_data$survey_company), "Unknown", fsb_data$survey_company)
fsb_data$survey_deptfunc <- ifelse(is.na(fsb_data$survey_deptfunc), "Unknown", fsb_data$survey_deptfunc)
# getting mean salary for each major
result <- fsb_data %>%
group_by(major1) %>%
summarise(Mean_Salary = mean(survey_salary, na.rm = TRUE))
for (i in 1:nrow(fsb_data)) {
if (is.na(fsb_data$survey_salary[i])) {
major <- fsb_data$major1[i]
mean_salary <- result$Mean_Salary[result$major1 == major]
fsb_data$survey_salary[i] <- mean_salary
}
}
fsb_data$survey_deptfunc <- ifelse(is.na(fsb_data$survey_deptfunc), mean_salary, fsb_data$survey_deptfunc)
missing_values <- colSums(is.na(fsb_data))
missing_values
#missing_values <- colSums(is.na(fsb_data))
#missing_values
#glimpse(fsb_data)
# Imputing relevant variables for our analysis
fsb_data$survey_city <- ifelse(is.na(fsb_data$survey_city), "Unknown", fsb_data$survey_city)
fsb_data$survey_state <- ifelse(is.na(fsb_data$survey_state), "Unknown", fsb_data$survey_state)
fsb_data$survey_company <- ifelse(is.na(fsb_data$survey_company), "Unknown", fsb_data$survey_company)
fsb_data$survey_deptfunc <- ifelse(is.na(fsb_data$survey_deptfunc), "Unknown", fsb_data$survey_deptfunc)
# getting mean salary for each major
result <- fsb_data %>%
group_by(major1) %>%
summarise(Mean_Salary = mean(survey_salary, na.rm = TRUE))
for (i in 1:nrow(fsb_data)) {
if (is.na(fsb_data$survey_salary[i])) {
major <- fsb_data$major1[i]
mean_salary <- result$Mean_Salary[result$major1 == major]
fsb_data$survey_salary[i] <- mean_salary
}
}
fsb_data$survey_salary <- ifelse(is.na(fsb_data$survey_salary), mean_salary, fsb_data$survey_salary)
missing_values <- colSums(is.na(fsb_data))
missing_values
glimpse(fsb_data)
fsb_data$Region <- ifelse(fsb_data$survey_state %in%
c("CA", "OR", "WA", "NV", "ID", "MT", "WY", "UT", "CO", "AZ", "NM"), "West",
ifelse(fsb_data$survey_state %in%
c("ND", "SD", "NE", "KS", "MO", "IA", "IL", "IN", "OH", "MI", "WI", "IA", "MN"), "Midwest",
ifelse(fsb-data$survey_state %in%
c("PA", "NY", "NJ", "CT", "RI", "MA", "VT", "NH", "NE"), "Northeast",
ifelse(fsb_data$survey_state %in%
c("FL", "GA", "AL", "SC", "NC", "VA", "DE", "MD", "DC", "WV", "KY", "TN", "AR", "MS", "LA", "OK", "TX"), "Southeast", "Other")))
fsb_data$region
fsb_data$Region <- ifelse(fsb_data$survey_state %in%
c("CA", "OR", "WA", "NV", "ID", "MT", "WY", "UT", "CO", "AZ", "NM"), "West",
ifelse(fsb_data$survey_state %in%
c("ND", "SD", "NE", "KS", "MO", "IA", "IL", "IN", "OH", "MI", "WI", "IA", "MN"), "Midwest",
ifelse(fsb-data$survey_state %in%
c("PA", "NY", "NJ", "CT", "RI", "MA", "VT", "NH", "NE"), "Northeast",
ifelse(fsb_data$survey_state %in%
c("FL", "GA", "AL", "SC", "NC", "VA", "DE", "MD", "DC", "WV", "KY", "TN", "AR", "MS", "LA", "OK", "TX"), "Southeast", "Other")))
fsb_data$Region
fsb_data$Region <- ifelse(fsb_data$survey_state %in%
c("CA", "OR", "WA", "NV", "ID", "MT", "WY", "UT", "CO", "AZ", "NM"), "West",
ifelse(fsb_data$survey_state %in%
c("ND", "SD", "NE", "KS", "MO", "IA", "IL", "IN", "OH", "MI", "WI", "IA", "MN"), "Midwest",
ifelse(fsb-data$survey_state %in%
c("PA", "NY", "NJ", "CT", "RI", "MA", "VT", "NH", "NE"), "Northeast",
ifelse(fsb_data$survey_state %in%
c("FL", "GA", "AL", "SC", "NC", "VA", "DE", "MD", "DC", "WV", "KY", "TN", "AR", "MS", "LA", "OK", "TX"), "Southeast", "Other"))))
fsb_data$Region <- ifelse(fsb_data$survey_state %in%
c("CA", "OR", "WA", "NV", "ID", "MT", "WY", "UT", "CO", "AZ", "NM"), "West",
ifelse(fsb_data$survey_state %in%
c("ND", "SD", "NE", "KS", "MO", "IA", "IL", "IN", "OH", "MI", "WI", "IA", "MN"), "Midwest",
ifelse(fsb_data$survey_state %in%
c("PA", "NY", "NJ", "CT", "RI", "MA", "VT", "NH", "NE"), "Northeast",
ifelse(fsb_data$survey_state %in%
c("FL", "GA", "AL", "SC", "NC", "VA", "DE", "MD", "DC", "WV", "KY", "TN", "AR", "MS", "LA", "OK", "TX"), "Southeast", "Other"))))
fsb_data$Region <- ifelse(fsb_data$survey_state %in%
c("CA", "OR", "WA", "NV", "ID", "MT", "WY", "UT", "CO", "AZ", "NM"), "West",
ifelse(fsb_data$survey_state %in%
c("ND", "SD", "NE", "KS", "MO", "IA", "IL", "IN", "OH", "MI", "WI", "IA", "MN"), "Midwest",
ifelse(fsb_data$survey_state %in%
c("PA", "NY", "NJ", "CT", "RI", "MA", "VT", "NH", "NE"), "Northeast",
ifelse(fsb_data$survey_state %in%
c("FL", "GA", "AL", "SC", "NC", "VA", "DE", "MD", "DC", "WV", "KY", "TN", "AR", "MS", "LA", "OK", "TX"), "Southeast", "Other"))))
fsb_data$Region
fsb_data$Region <- ifelse(fsb_data$survey_state %in%
c("CA", "OR", "WA", "NV", "ID", "MT", "WY", "UT", "CO", "AZ", "NM"), "West",
ifelse(fsb_data$survey_state %in%
c("ND", "SD", "NE", "KS", "MO", "IA", "IL", "IN", "OH", "MI", "WI", "IA", "MN"), "Midwest",
ifelse(fsb_data$survey_state %in%
c("PA", "NY", "NJ", "CT", "RI", "MA", "VT", "NH", "NE"), "Northeast",
ifelse(fsb_data$survey_state %in%
c("FL", "GA", "AL", "SC", "NC", "VA", "DE", "MD", "DC", "WV", "KY", "TN", "AR", "MS", "LA", "OK", "TX"), "Southeast", "Other"))))
value_counts <- fsb_data %>%
group_by(Region) %>%
summarise(Count = n())
value_counts
glimpse(fsb_data)
missing_values <- colSums(is.na(fsb_data))
missing_values
glimpse(fsb_data)
# Imputing relevant variables for our analysis
fsb_data$survey_city <- ifelse(is.na(fsb_data$survey_city), "Unknown", fsb_data$survey_city)
fsb_data$survey_state <- ifelse(is.na(fsb_data$survey_state), "Unknown", fsb_data$survey_state)
fsb_data$survey_company <- ifelse(is.na(fsb_data$survey_company), "Unknown", fsb_data$survey_company)
fsb_data$survey_deptfunc <- ifelse(is.na(fsb_data$survey_deptfunc), "Unknown", fsb_data$survey_deptfunc)
# getting mean salary for each major
result <- fsb_data %>%
group_by(major1) %>%
summarise(Mean_Salary = mean(survey_salary, na.rm = TRUE))
for (i in 1:nrow(fsb_data)) {
if (is.na(fsb_data$survey_salary[i])) {
major <- fsb_data$major1[i]
mean_salary <- result$Mean_Salary[result$major1 == major]
fsb_data$survey_salary[i] <- mean_salary
}
}
fsb_data$survey_salary <- ifelse(is.na(fsb_data$survey_salary), mean_salary, fsb_data$survey_salary)
missing_values <- colSums(is.na(fsb_data))
missing_values
value_counts <- fsb_data %>%
group_by(survey_salary) %>%
summarise(Count = n())
value_counts
fsb_data$survey_salary[fsb_data$survey_salary== 'NaN'] -> NA
fsb_data$survey_salary[fsb_data$survey_salary== 'NaN'] <- NA
missing_values <- colSums(is.na(fsb_data))
missing_values
glimpse(fsb_data)
# Imputing relevant variables for our analysis
fsb_data$survey_city <- ifelse(is.na(fsb_data$survey_city), "Unknown", fsb_data$survey_city)
fsb_data$survey_state <- ifelse(is.na(fsb_data$survey_state), "Unknown", fsb_data$survey_state)
fsb_data$survey_company <- ifelse(is.na(fsb_data$survey_company), "Unknown", fsb_data$survey_company)
fsb_data$survey_deptfunc <- ifelse(is.na(fsb_data$survey_deptfunc), "Unknown", fsb_data$survey_deptfunc)
# getting mean salary for each major
result <- fsb_data %>%
group_by(major1) %>%
summarise(Mean_Salary = mean(survey_salary, na.rm = TRUE))
for (i in 1:nrow(fsb_data)) {
if (is.na(fsb_data$survey_salary[i])) {
major <- fsb_data$major1[i]
mean_salary <- result$Mean_Salary[result$major1 == major]
fsb_data$survey_salary[i] <- mean_salary
}
}
fsb_data$survey_salary[fsb_data$survey_salary== 'NaN'] <- NA
fsb_data$survey_salary <- ifelse(is.na(fsb_data$survey_salary), mean_salary, fsb_data$survey_salary)
missing_values <- colSums(is.na(fsb_data))
missing_values
fsb_data$survey_salary[fsb_data$survey_salary== 'NaN'] <- NA
fsb_data$survey_salary <- ifelse(is.na(fsb_data$survey_salary), mean_salary, fsb_data$survey_salary)
value_counts1 <- fsb_data %>%
group_by(survey_salary) %>%
summarise(Count = n())
value_counts1
fsb_data$survey_salary[fsb_data$survey_salary== 'NaN'] <- NA
fsb_data$survey_salary <- ifelse(is.na(fsb_data$survey_salary), mean_salary, fsb_data$survey_salary)
value_counts1 <- fsb_data %>%
group_by(survey_salary) %>%
summarise(Count = n())
value_counts1
fsb_data$survey_salary[fsb_data$survey_salary== ' NaN'] <- NA
fsb_data$survey_salary <- ifelse(is.na(fsb_data$survey_salary), mean_salary, fsb_data$survey_salary)
value_counts1 <- fsb_data %>%
group_by(survey_salary) %>%
summarise(Count = n())
value_counts1
fsb_data$survey_salaey
fsb_data$survey_salary[fsb_data$survey_salary== 'NaN'] <- NA
fsb_data$survey_salary <- ifelse(is.na(fsb_data$survey_salary), mean_salary, fsb_data$survey_salary)
value_counts1 <- fsb_data %>%
group_by(survey_salary) %>%
summarise(Count = n())
value_counts1
fsb_data$survey_salary[fsb_data$survey_salary=='NaN']
fsb_data$survey_salary[fsb_data$survey_salary== 'NaN'] <- NA
fsb_data$survey_salary <- ifelse(is.na(fsb_data$survey_salary), mean_salary, fsb_data$survey_salary)
value_counts1 <- fsb_data %>%
group_by(survey_salary) %>%
summarise(Count = n())
value_counts1
fsb_data[fsb_data$survey_salary=='NaN']
fsb_data$survey_salary[fsb_data$survey_salary== 'NaN'] <- NA
fsb_data$survey_salary <- ifelse(is.na(fsb_data$survey_salary), mean_salary, fsb_data$survey_salary)
value_counts1 <- fsb_data %>%
group_by(survey_salary) %>%
summarise(Count = n())
value_counts1
fsb_data[fsb_data$survey_salary == 'NaN', ]
fsb_data$survey_salary[fsb_data$survey_salary== 'NaN', ] <- NA
fsb_data$survey_salary[fsb_data$survey_salary== 'NaN'] <- NA
fsb_data$survey_salary <- ifelse(is.na(fsb_data$survey_salary), mean_salary, fsb_data$survey_salary)
value_counts1 <- fsb_data %>%
group_by(survey_salary) %>%
summarise(Count = n())
value_counts1
fsb_data[fsb_data$survey_salary == 'NaN', ]
fsb_data$survey_salary[fsb_data$survey_salary== 'NaN'] <- NA
fsb_data$survey_salary <- ifelse(is.na(fsb_data$survey_salary), mean_salary, fsb_data$survey_salary)
value_counts1 <- fsb_data %>%
group_by(survey_salary) %>%
summarise(Count = n())
value_counts1
fsb_data[fsb_data$survey_salary == 'NaN', ]
fsb_data[3056]
fsb_data$survey_salary[3056] <- NA
#install.packages("tidyr")
#install.packages("readr")
#install.packages("dplyr")
library(dplyr)
library(readr)
library(tidyr)
library(forcats)
fsb_data$survey_city <- as_factor(survey_city)
fsb_data$survey_city <- as_factor(fsb_data$survey_city)
v
fsb_data$survey_city <- as_factor(fsb_data$survey_city)
fsb_data$survey_state <- as_factor(fsb_data$survey_state)
fsb_data$Region <- as_factor(fsb_data$Region)
fsb_data$survey_deptfunc <- as_factor(fsb_data$survey_deptfunc)
glimpse(fsb_data)
